<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
  
<link rel="stylesheet" href="https://dl.dropboxusercontent.com/u/43615815/CSS/bootstrap.css">  
<link rel="stylesheet" href="https://dl.dropboxusercontent.com/u/43615815/CSS/joint.css" />

<script src="https://dl.dropboxusercontent.com/u/43615815/JS/customjoint.js"></script>
<script src="https://dl.dropboxusercontent.com/u/43615815/JS/joint.shapes.erd.js"></script>
<script src="https://dl.dropboxusercontent.com/u/43615815/JS/joint.dia.command.js" type="text/javascript" ></script>

<script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/aes.js"></script>
<script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/components/enc-base64-min.js"></script>

<!-- Modal for square and oval -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Edit Shape</h4>
      </div>
      <div class="modal-body">
		<div class="form-group">
			<label for="name">Text:</label>
			<textarea class="form-control" rows="2" id="name" name="name"></textarea>
		</div>
		<div class="form-group">
			<form role="form">
				<label class="radio-inline">
					<input type="radio" name="optradio" id="red">Red
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="yellow">Yellow
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="blue">Blue
					</label>
					<br>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="orange">Orange
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="green" checked>Green
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="violet">Violet
					</label>
			</form>
		</div>
			<br><button class="btn btn-info" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">Advanced <span class="glyphicon glyphicon-chevron-down"></span></button>
			<div class="collapse" id="collapseExample"><br>
				<div class="well">
					<div class="form-group">
						<label for="comments">Comments:</label>
						<textarea class="form-control" rows="4" id="comments" name="comments">Comments are not currently saved but will be in the future!</textarea>
					</div>
				</div>
			</div>
      </div>
      <div class="modal-footer">
		<div style="float:left;color:#737373;line-height: 34px;">
			<button type="button" class="btn btn-danger" onclick="remove_shape()">Delete</button>
		</div>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onClick="div_hide()">Save changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal for diamond -->
<div class="modal fade" id="diaModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Edit Shape</h4>
      </div>
      <div class="modal-body">
		<div class="form-group">
			<label for="name">Feelings:</label><br>
			<input type="checkbox" value="" id="angry">Angry
			<input type="checkbox" value="" id="sad">Sad
			<input type="checkbox" value="" id="happy">Happy<br>
			<input type="checkbox" value="" id="confused">Confused
			<input type="checkbox" value="" id="scared">Scared
		</div>

		<div class="form-group">
			<form role="form">
				<label class="radio-inline">
					<input type="radio" name="optradio" id="red2">Red
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="yellow2">Yellow
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="blue2">Blue
					</label>
					<br>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="orange2">Orange
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="green2" checked>Green
				</label>
				<label class="radio-inline">
					<input type="radio" name="optradio" id="violet2">Violet
					</label>
			</form>
		</div>
		<br><button class="btn btn-info" type="button" data-toggle="collapse" data-target="#collapseExample2" aria-expanded="false" aria-controls="collapseExample2">Advanced <span class="glyphicon glyphicon-chevron-down"></span></button>
			<div class="collapse" id="collapseExample2"><br>
				<div class="well">
					<div class="form-group">
						<label for="comments">Comments:</label>
						<textarea class="form-control" rows="4" id="comments" name="comments">Comments are not currently saved but will be in the future!</textarea>
					</div>
				</div>
			</div>
      </div>
      <div class="modal-footer">
		<div style="float:left;color:#737373;line-height: 34px;">
			<button type="button" class="btn btn-danger" onclick="remove_dia()">Delete</button>
		</div>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onClick="div_hide2()">Save changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal for save -->
<div class="modal fade" id="saveModal" tabindex="-1" role="dialog" aria-labelledby="saveModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="saveModalLabel">Save</h4>
      </div>
      <div class="modal-body">
		<div class="form-group">
			<%= simple_form_for @fmap, remote: true do |f|        %>
			  <% if @fmap.errors.any? %>
				<div id="error_explanation">
				<h2><%= pluralize(@fmap.errors.count, "error") %> prohibited this map from being saved:</h2>
			<ul>
				<% @fmap.errors.full_messages.each do |msg| %>
				<li><%= msg %></li>
			<% end %>
			</ul>
			</div>
			<% end %>
				<%= f.input        :title,  input_html: { class: 'form-control' }     %>
				<%= f.hidden_field :json %>
				<%= f.input        :username, input_html: { value: current_user.email, class: 'form-control' }, readonly: true  %>
				<%= f.input        :family,  input_html: { class: 'form-control' }      %>
				<%= f.input        :notes,  input_html: { class: 'form-control' }       %>
				<%= f.input        :extra,  input_html: { class: 'form-control' }       %>
				<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				<%= f.button :submit, "Save Family Map", class: "btn btn-primary", :onclick => "save_to_database()" %>
				</div>
			<% end %>
		</div>
      </div>
    </div>
  </div>
</div>

<!-- Modal for password seed -->
<div class="modal fade" id="passModal" tabindex="-1" role="dialog" aria-labelledby="passModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="passModalLabel">Password</h4>
      </div>
      <div class="modal-body">
		<div class="form-group">
			<label for="pw">Password:</label>
			<input type="password" class="form-control" rows="2" id="pw" name="pw"></input>
		</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onClick="save_proceed()">Proceed</button>
      </div>
    </div>
  </div>
</div>

      <nav class="navbar navbar-default navbar-static-top">
        <div class="container-fluid">
          <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Family Map</a>
          </div>
          <div id="navbar" class="navbar-collapse collapse">
		    <div class="nav navbar-nav">
			<li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">File <span class="caret"></span></a>
                <ul class="dropdown-menu" role="menu">
                  <li><a href="http://vps.cs.wmich.edu:61580/fmaps/new" onclick="return confirm('Are you sure? All unsaved changes will be lost.')">New</a></li>
                  <li><a href="#" onclick="save_to_database_prep()">Save</a></li>
                  <li><a href="http://vps.cs.wmich.edu:61580/fmaps/" onclick="return confirm('Are you sure? All unsaved changes will be lost.')">Load</a></li>
                  <li class="divider"></li>
                  <li class="dropdown-header">Export</li>
                  <li><a href="#" onclick="window.print()"; >Print</a></li>
                </ul>
              </li>
            </div>
				
				<button type="button" class="btn btn-default navbar-btn" onclick="add_oval()">Oval</button>
				<button type="button" class="btn btn-default navbar-btn" onclick="add_diamond()">Diamond</button>
				<button type="button" class="btn btn-default navbar-btn" onclick="add_square()">Square</button>
		
				<div class="navbar-right">
				<button type="button" class="btn btn-default navbar-btn" id="undo"><span class="glyphicon glyphicon-arrow-left"></span> Undo</button>
				<button type="button" class="btn btn-default navbar-btn" id="redo">Redo <span class="glyphicon glyphicon-arrow-right"></span></button>
				</div>
          </div><!--/.nav-collapse -->
        </div><!--/.container-fluid -->
      </nav>

<div class="container-fluid">
  <div class="row">
	
    <div class="col-sm-12" style="background-color:#E0E0EB;">
	
	<div id="paper"> </div>
	
	</div>
  </div>
</div>

</div>

<script>
var uID;
var jsonString;
var graph = new joint.dia.Graph;

var paper = new joint.dia.Paper({
    el: $('#paper'),
    width: (screen.width-50),
    height: (screen.height-100),
    gridSize: 1,
	perpendicularLinks: false,
	linkConnectionPoint: joint.util.shapePerimeterConnectionPoint,
    model: graph
});

var commandManager = new joint.dia.CommandManager({ graph: graph });
var erd = joint.shapes.erd;

var element = function(elm, x, y, label) {
    var cell = new elm({ position: { x: x, y: y }, attrs: { text: { text: label }}});
    graph.addCell(cell);
    return cell;
};

var myLink;
var link = function(elm1, elm2) {
    myLink = new erd.Line({ source: { id: elm1.id }, target: { id: elm2.id }, 
		connector: { name: 'smooth' },
		attrs: {
        '.connection': {
            stroke: '#333333',
            'stroke-width': 3
        },
        '.marker-target': {
            fill: '#333333',
            d: 'M 10 0 L 0 5 L 10 10 z'
        }
    }
		});
    graph.addCell(myLink);
    return myLink;
};

var myLink2;
var link2 = function(elm1, elm2) {
    myLink2 = new erd.Line({ source: { id: elm1.id }, target: { id: elm2.id }, 
		connector: { name: 'smooth' },
		attrs: {
        '.connection': {
            stroke: '#333333',
            'stroke-width': 3
        }
    }
		});
    graph.addCell(myLink2);
    return myLink2;
};

/* EXAMPLES OF ADDING NEW CUSTOM SHAPES
var textBlock = new joint.shapes.basic.TextBlockC({
                position: { x:100, y:100 },
				size: { width: 170, height: 80 },
                content: "<p>Goes to garage and yells all you care about is pot</p>"
        });
graph.addCell(textBlock);

var textBlock2 = new joint.shapes.basic.TextBlock({
                position: { x:300, y:300 },
				size: { width: 170, height: 80 },
                content: "<p>Goes to garage and yells all you care about is pot and I don't even like you anymore you uggo</p>"
        });
graph.addCell(textBlock2);

var textBlock3 = new joint.shapes.basic.TextBlockD({
                position: { x:500, y:500 },
				size: { width: 100, height: 100 },
                content: "<p>Confused + Scared</p>"
        });
graph.addCell(textBlock3);

var ttt = textBlock.prop('type');
///alert(ttt);
//textBlock.prop('content', "<p>Test test</p>");
*/

$('#undo').on('click', _.bind(commandManager.undo, commandManager));
$('#redo').on('click', _.bind(commandManager.redo, commandManager));

paper.on('cell:pointerdblclick', 
    function(cellView, evt, x, y) { 
		var elm = graph.getCell(cellView.model.id);
		var txt = elm.prop('content');
		var res = txt.replace("<p>", "");
		var fin = res.replace("</p>", "");
		
		var type = elm.prop('type');
		if (type=='basic.TextBlock')
		{
			document.getElementById("name").value = fin;
			uID = cellView.model.id;
			div_show();
		}else if(type=='basic.TextBlockD')
		{
			uID = cellView.model.id;
			var sadCheck = elm.prop('sad');
			var angryCheck = elm.prop('angry');
			var scaredCheck = elm.prop('scared');
			var happyCheck = elm.prop('happy');
			var confusedCheck = elm.prop('confused');
			
			document.getElementById("sad").checked = false;
			document.getElementById("angry").checked = false;
			document.getElementById("scared").checked = false;
			document.getElementById("happy").checked = false;
			document.getElementById("confused").checked = false;
			
			if(sadCheck=='t'){
				document.getElementById("sad").checked = true;}
			if(angryCheck=='t'){
				document.getElementById("angry").checked = true;}
			if(scaredCheck=='t'){
				document.getElementById("scared").checked = true;}
			if(happyCheck=='t'){
				document.getElementById("happy").checked = true;}
			if(confusedCheck=='t'){
				document.getElementById("confused").checked = true;}
			
			$('#diaModal').modal('show');
		}
		else
		{
			document.getElementById("name").value = fin;
			uID = cellView.model.id;
			div_show();
		}
    }
);

paper.on('cell:pointerup', function(cellView, evt, x, y) {

    // Find the first element below that is not a link nor the dragged element itself.
    var elementBelow = graph.get('cells').find(function(cell) {
        if (cell instanceof joint.dia.Link) return false; // Not interested in links.
        if (cell.id === cellView.model.id) return false; // The same element as the dropped one.
        if (cell.getBBox().containsPoint(g.point(x, y))) {
            return true;
        }
        return false;
    });
    
    // If the two elements are connected already, don't
    // connect them again (this is application specific though).
    if (elementBelow && !_.contains(graph.getNeighbors(elementBelow), cellView.model)) {
/*
        graph.addCell(new joint.dia.Link({
            source: { id: cellView.model.id }, target: { id: elementBelow.id },
            attrs: { '.marker-source': { d: 'M 10 0 L 0 5 L 10 10 z' } }
        }));
	*/	
		var s = graph.getCell(cellView.model.id);
		var t = graph.getCell(elementBelow.id);
		link(t,s);
		
		var sx = s.prop('position/x');
		var sy = s.prop('position/y');
		//alert(sx+sy);
        // Move the element a bit to the side.
		if(sx>1000)
		{
			s.translate(-200, 0);
		}
		else
		{
			s.translate(200, 0);
		}
    }
});

function changeText2(){
var textBoxText = document.getElementById("name").value;
var elm = graph.getCell(uID);
var type = elm.prop('type');

//need to figure out something here to check text length and auto adapt size//
var x = Math.floor(getTextWidth(textBoxText, "14pt arial"))+1;

var sLen = 208;
var oLen = 150;

if(type=="basic.TextBlock")//square 208 per line
{
	elm.resize(170, 20*(Math.ceil(x/sLen)));
}else//oval varies
{
	elm.resize(170, 20*(Math.ceil(x/oLen)));
}

//var fullText = "<p>"+joint.util.breakText(textBoxText, { width: 150 })+"</p>";
var fullText = "<p>"+textBoxText+"</p>";
elm.prop('content',fullText);
}

//Function To Display Popup
function div_show() {
$('#myModal').modal('show');
}
//Function to Hide Popup
function div_hide(){
changeText2();
var elm = graph.getCell(uID);
var type = elm.prop('type');

if(type=="basic.TextBlock")
{

if(document.getElementById('green').checked) {
  elm.attr({
    rect: { fill: '#33CC33', stroke: '#29A329' }//green
});
}else if(document.getElementById('blue').checked) {
  elm.attr({
    rect: { fill: '#00CCFF', stroke: '#00A3CC' }//blue
}); 
}else if(document.getElementById('red').checked) {
  elm.attr({
    rect: { fill: '#FF3333', stroke: '#FF0000' }//red
}); 
}else if(document.getElementById('violet').checked) {
  elm.attr({
    rect: { fill: '#9933FF', stroke: '#7A29CC' }//violet
}); 
}else if(document.getElementById('yellow').checked) {
  elm.attr({
    rect: { fill: '#FFFF00', stroke: '#CCCC00' }//yellow
}); 
}else if(document.getElementById('orange').checked) {
  elm.attr({
    rect: { fill: '#FF9900', stroke: '#CC7A00' }//orange
}); 
}

$('#myModal').modal('hide');
}else
{
if(document.getElementById('green').checked) {
  elm.attr({
    '.outer': { fill: '#33CC33', stroke: '#29A329' }//green
});
}else if(document.getElementById('blue').checked) {
  elm.attr({
    '.outer': { fill: '#00CCFF', stroke: '#00A3CC' }//blue
}); 
}else if(document.getElementById('red').checked) {
  elm.attr({
    '.outer': { fill: '#FF3333', stroke: '#FF0000' }//red
}); 
}else if(document.getElementById('violet').checked) {
  elm.attr({
    '.outer': { fill: '#9933FF', stroke: '#7A29CC' }//violet
}); 
}else if(document.getElementById('yellow').checked) {
  elm.attr({
    '.outer': { fill: '#FFFF00', stroke: '#CCCC00' }//yellow
}); 
}else if(document.getElementById('orange').checked) {
  elm.attr({
    '.outer': { fill: '#FF9900', stroke: '#CC7A00' }//orange
}); 
}

$('#myModal').modal('hide');
}

}

function div_hide2(){
var numChecked = 0;
if(document.getElementById('sad').checked){
	numChecked++;
}
if(document.getElementById('angry').checked){
	numChecked++;
}
if(document.getElementById('happy').checked){
	numChecked++;
}
if(document.getElementById('confused').checked){
	numChecked++;
}
if(document.getElementById('scared').checked){
	numChecked++;
}

if(numChecked>2){
	//do something
	alert("Too many boxes checked");
	return;
}

var elm = graph.getCell(uID);
var textInBox="";
if(document.getElementById('sad').checked)
{
	textInBox+="Sad "
	elm.prop('sad','t');
}else
{
	elm.prop('sad','f');
}
if(document.getElementById('angry').checked)
{
	textInBox+="Angry "
	elm.prop('angry','t');
}else
{
	elm.prop('angry','f');
}
if(document.getElementById('happy').checked)
{
	textInBox+="Happy "
	elm.prop('happy','t');
}else
{
	elm.prop('happy','f');
}
if(document.getElementById('scared').checked)
{
	textInBox+="Scared "
	elm.prop('scared','t');
}else
{
	elm.prop('scared','f');
}
if(document.getElementById('confused').checked)
{
	textInBox+="Confused "
	elm.prop('confused','t');
}else
{
	elm.prop('confused','f');
}
var abc = textInBox.trim();
var addPlus = abc.replace(" "," + ");
var fin = "<p>"+addPlus+"</p>";
elm.prop('content',fin);
//elm.attr({
//    text: { text: textInBox}
//});

if(document.getElementById('green2').checked) {
  elm.attr({
    '.outer': { fill: '#33CC33', stroke: '#29A329' }//green
});
}else if(document.getElementById('blue2').checked) {
  elm.attr({
    '.outer': { fill: '#00CCFF', stroke: '#00A3CC' }//blue
}); 
}else if(document.getElementById('red2').checked) {
  elm.attr({
    '.outer': { fill: '#FF3333', stroke: '#FF0000' }//red
}); 
}else if(document.getElementById('violet2').checked) {
  elm.attr({
    '.outer': { fill: '#9933FF', stroke: '#7A29CC' }//violet
}); 
}else if(document.getElementById('yellow2').checked) {
  elm.attr({
    '.outer': { fill: '#FFFF00', stroke: '#CCCC00' }//yellow
}); 
}else if(document.getElementById('orange2').checked) {
  elm.attr({
    '.outer': { fill: '#FF9900', stroke: '#CC7A00' }//orange
}); 
}

$('#diaModal').modal('hide');
}

//Function to serialize graph
function serialize_graph(){
jsonString = JSON.stringify(graph.toJSON());
console.log(jsonString);
}

//Function to deserialize graph
function deserialize_graph(){
graph.fromJSON(JSON.parse(jsonString));
}
/*
function add_arrow(){
	var elm = graph.getCell(uID);
    var myLink = new erd.Line({ source: { id: elm.id }, 
		connector: { name: 'smooth' },
		attrs: {
        '.connection': {
            stroke: '#333333',
            'stroke-width': 3
        },
        '.marker-target': {
            fill: '#333333',
            d: 'M 10 0 L 0 5 L 10 10 z'
        }
    }
		});
    graph.addCell(myLink);
}
*/
function add_oval(){
/*
	var ov  = element(erd.Normal, 500, 500, "");
	graph.addCell(ov);
	//ov.toFront();
	var txt = ov.attr('text/text');
	document.getElementById("name").value = txt;
	uID = ov.id;
	$('#myModal').modal('show');
*/
	var textBlock = new joint.shapes.basic.TextBlockC({
                position: { x:100, y:100 },
				size: { width: 170, height: 80 },
                content: "<p> </p>"
        });
	graph.addCell(textBlock);
	var txt = textBlock.prop('content');
	var res = txt.replace("<p>", "");
	var fin = res.replace("</p>", "");
	document.getElementById("name").value = fin;
	uID = textBlock.id;
	$('#myModal').modal('show');
}

function add_diamond(){
/*
	var di  = element(erd.Relationship, 500, 500, "");
	graph.addCell(di);
	//ov.toFront();
	var txt = di.attr('text/text');
	document.getElementById("name").value = txt;
	uID = di.id;
	$('#diaModal').modal('show');
*/

	document.getElementById("sad").checked = false;
	document.getElementById("angry").checked = false;
	document.getElementById("scared").checked = false;
	document.getElementById("happy").checked = false;
	document.getElementById("confused").checked = false;

	var textBlock = new joint.shapes.basic.TextBlockD({
                position: { x:100, y:100 },
				size: { width: 100, height: 100 },
                content: "<p> </p>"
        });
	graph.addCell(textBlock);
	var txt = textBlock.prop('content');
	var res = txt.replace("<p>", "");
	var fin = res.replace("</p>", "");
	document.getElementById("name").value = fin;
	uID = textBlock.id;
	$('#diaModal').modal('show');
}

function add_square(){
/*	var sq  = element(erd.Entity, 500, 500, "");
	graph.addCell(sq);
	//ov.toFront();
	var txt = sq.attr('text/text');
	document.getElementById("name").value = txt;
	uID = sq.id;
	$('#myModal').modal('show');
	*/
	var textBlock = new joint.shapes.basic.TextBlock({
                position: { x:100, y:100 },
				size: { width: 170, height: 80 },
                content: "<p> </p>"
        });
	graph.addCell(textBlock);
	var txt = textBlock.prop('content');
	var res = txt.replace("<p>", "");
	var fin = res.replace("</p>", "");
	document.getElementById("name").value = fin;
	uID = textBlock.id;
	$('#myModal').modal('show');
}

function remove_shape()
{
	graph.getCell(uID).remove();
	$('#myModal').modal('hide');
}

function remove_dia()
{
	graph.getCell(uID).remove();
	$('#diaModal').modal('hide');
}

function save_to_database_prep()
{
	$('#passModal').modal('show');
}
function save_proceed()
{
	document.getElementById("fmap_json").value = CryptoJS.AES.encrypt(JSON.stringify(graph.toJSON()),document.getElementById("pw").value);
	$('#passModal').modal('hide');
	$('#saveModal').modal('show');
}
function div_save_hide()
{
	$('#saveModal').modal('hide');
	//the save div is now hidden
}

function save_to_database()
{
	title = document.getElementById("fmap_title").value;
	if(title == ""){
		alert("Please include a title before saving");
	}
	else{
		alert('Family Map Saved');
		$('#saveModal').modal('hide');
	}
}

function getTextWidth(text, font) {
    // re-use canvas object for better performance
    var canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement("canvas"));
    var context = canvas.getContext("2d");
    context.font = font;
    var metrics = context.measureText(text);
    return metrics.width;
};
</script>
</body>
<script src="https://dl.dropboxusercontent.com/u/43615815/JS/jquery-1.11.1.min.js"></script>
<script src="https://dl.dropboxusercontent.com/u/43615815/JS/bootstrap.js"></script>

</html>